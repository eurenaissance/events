<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

return $this->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, array(
    'App\\Form\\LoginType' => array('privates', 'App\\Form\\LoginType', 'getLoginTypeService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\AdminType' => array('services', 'sonata.admin.form.type.admin', 'getSonata_Admin_Form_Type_AdminService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ChoiceFieldMaskType' => array('services', 'sonata.admin.doctrine_orm.form.type.choice_field_mask', 'getSonata_Admin_DoctrineOrm_Form_Type_ChoiceFieldMaskService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\CollectionType' => array('services', 'sonata.admin.form.type.collection', 'getSonata_Admin_Form_Type_CollectionService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\ChoiceType' => array('services', 'sonata.admin.form.filter.type.choice', 'getSonata_Admin_Form_Filter_Type_ChoiceService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\DateRangeType' => array('services', 'sonata.admin.form.filter.type.daterange', 'getSonata_Admin_Form_Filter_Type_DaterangeService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\DateTimeRangeType' => array('services', 'sonata.admin.form.filter.type.datetime_range', 'getSonata_Admin_Form_Filter_Type_DatetimeRangeService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\DateTimeType' => array('services', 'sonata.admin.form.filter.type.datetime', 'getSonata_Admin_Form_Filter_Type_DatetimeService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\DateType' => array('services', 'sonata.admin.form.filter.type.date', 'getSonata_Admin_Form_Filter_Type_DateService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\DefaultType' => array('services', 'sonata.admin.form.filter.type.default', 'getSonata_Admin_Form_Filter_Type_DefaultService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\Filter\\NumberType' => array('services', 'sonata.admin.form.filter.type.number', 'getSonata_Admin_Form_Filter_Type_NumberService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ModelAutocompleteType' => array('services', 'sonata.admin.form.type.model_autocomplete', 'getSonata_Admin_Form_Type_ModelAutocompleteService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ModelHiddenType' => array('services', 'sonata.admin.form.type.model_hidden', 'getSonata_Admin_Form_Type_ModelHiddenService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ModelListType' => array('services', 'sonata.admin.form.type.model_list', 'getSonata_Admin_Form_Type_ModelListService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ModelReferenceType' => array('services', 'sonata.admin.form.type.model_reference', 'getSonata_Admin_Form_Type_ModelReferenceService.php', true),
    'Sonata\\AdminBundle\\Form\\Type\\ModelType' => array('services', 'sonata.admin.form.type.model_choice', 'getSonata_Admin_Form_Type_ModelChoiceService.php', true),
    'Sonata\\BlockBundle\\Form\\Type\\ContainerTemplateType' => array('privates', 'sonata.block.form.type.container_template', 'getSonata_Block_Form_Type_ContainerTemplateService.php', true),
    'Sonata\\BlockBundle\\Form\\Type\\ServiceListType' => array('privates', 'sonata.block.form.type.block', 'getSonata_Block_Form_Type_BlockService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\BooleanType' => array('services', 'sonata.core.form.type.boolean_legacy', 'getSonata_Core_Form_Type_BooleanLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\CollectionType' => array('services', 'sonata.core.form.type.collection_legacy', 'getSonata_Core_Form_Type_CollectionLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\ColorSelectorType' => array('services', 'sonata.core.form.type.color_selector', 'getSonata_Core_Form_Type_ColorSelectorService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\ColorType' => array('services', 'sonata.core.form.type.color_legacy', 'getSonata_Core_Form_Type_ColorLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DatePickerType' => array('services', 'sonata.core.form.type.date_picker_legacy', 'getSonata_Core_Form_Type_DatePickerLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DateRangePickerType' => array('services', 'sonata.core.form.type.date_range_picker_legacy', 'getSonata_Core_Form_Type_DateRangePickerLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DateRangeType' => array('services', 'sonata.core.form.type.date_range_legacy', 'getSonata_Core_Form_Type_DateRangeLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DateTimePickerType' => array('services', 'sonata.core.form.type.datetime_picker_legacy', 'getSonata_Core_Form_Type_DatetimePickerLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangePickerType' => array('services', 'sonata.core.form.type.datetime_range_picker_legacy', 'getSonata_Core_Form_Type_DatetimeRangePickerLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangeType' => array('services', 'sonata.core.form.type.datetime_range_legacy', 'getSonata_Core_Form_Type_DatetimeRangeLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\EqualType' => array('services', 'sonata.core.form.type.equal_legacy', 'getSonata_Core_Form_Type_EqualLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\ImmutableArrayType' => array('services', 'sonata.core.form.type.array_legacy', 'getSonata_Core_Form_Type_ArrayLegacyService.php', true),
    'Sonata\\CoreBundle\\Form\\Type\\TranslatableChoiceType' => array('services', 'sonata.core.form.type.translatable_choice', 'getSonata_Core_Form_Type_TranslatableChoiceService.php', true),
    'Sonata\\Form\\Type\\BooleanType' => array('services', 'sonata.core.form.type.boolean', 'getSonata_Core_Form_Type_BooleanService.php', true),
    'Sonata\\Form\\Type\\CollectionType' => array('services', 'sonata.core.form.type.collection', 'getSonata_Core_Form_Type_CollectionService.php', true),
    'Sonata\\Form\\Type\\DatePickerType' => array('services', 'sonata.core.form.type.date_picker', 'getSonata_Core_Form_Type_DatePickerService.php', true),
    'Sonata\\Form\\Type\\DateRangePickerType' => array('services', 'sonata.core.form.type.date_range_picker', 'getSonata_Core_Form_Type_DateRangePickerService.php', true),
    'Sonata\\Form\\Type\\DateRangeType' => array('services', 'sonata.core.form.type.date_range', 'getSonata_Core_Form_Type_DateRangeService.php', true),
    'Sonata\\Form\\Type\\DateTimePickerType' => array('services', 'sonata.core.form.type.datetime_picker', 'getSonata_Core_Form_Type_DatetimePickerService.php', true),
    'Sonata\\Form\\Type\\DateTimeRangePickerType' => array('services', 'sonata.core.form.type.datetime_range_picker', 'getSonata_Core_Form_Type_DatetimeRangePickerService.php', true),
    'Sonata\\Form\\Type\\DateTimeRangeType' => array('services', 'sonata.core.form.type.datetime_range', 'getSonata_Core_Form_Type_DatetimeRangeService.php', true),
    'Sonata\\Form\\Type\\EqualType' => array('services', 'sonata.core.form.type.equal', 'getSonata_Core_Form_Type_EqualService.php', true),
    'Sonata\\Form\\Type\\ImmutableArrayType' => array('services', 'sonata.core.form.type.array', 'getSonata_Core_Form_Type_ArrayService.php', true),
    'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => array('privates', 'form.type.entity', 'getForm_Type_EntityService.php', true),
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => array('privates', 'form.type.choice', 'getForm_Type_ChoiceService.php', true),
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => array('privates', 'form.type.form', 'getForm_Type_FormService.php', true),
)), array('Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.form.transformation_failure_handling'] ?? $this->load('getForm_TypeExtension_Form_TransformationFailureHandlingService.php'));
    yield 1 => ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
    yield 2 => ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
    yield 3 => ($this->privates['form.type_extension.upload.validator'] ?? $this->load('getForm_TypeExtension_Upload_ValidatorService.php'));
    yield 4 => ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
    yield 5 => ($this->privates['form.type_extension.form.data_collector'] ?? $this->load('getForm_TypeExtension_Form_DataCollectorService.php'));
    yield 6 => ($this->services['sonata.admin.form.extension.field'] ?? $this->load('getSonata_Admin_Form_Extension_FieldService.php'));
    yield 7 => ($this->services['sonata.admin.form.extension.field.mopa'] ?? ($this->services['sonata.admin.form.extension.field.mopa'] = new \Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension()));
}, 8), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.repeated.validator'] ?? ($this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.submit.validator'] ?? ($this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => new RewindableGenerator(function () {
    yield 0 => ($this->services['sonata.admin.form.extension.choice'] ?? ($this->services['sonata.admin.form.extension.choice'] = new \Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension()));
}, 1)), new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
    yield 1 => ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 2))), new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($this->privates['data_collector.form'] ?? $this->getDataCollector_FormService())));
