<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.firewall.map.context.admin' shared service.

$a = ($this->services['security.token_storage'] ?? ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()));
$b = ($this->privates['security.http_utils'] ?? $this->load('getSecurity_HttpUtilsService.php'));
$c = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $b, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($b, '/admin/login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'app_admin_logout'));
$c->addHandler(new \Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler(($this->privates['security.csrf.token_storage'] ?? $this->load('getSecurity_Csrf_TokenStorageService.php'))));
$c->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());

return $this->privates['security.firewall.map.context.admin'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
    yield 0 => ($this->privates['security.channel_listener'] ?? $this->load('getSecurity_ChannelListenerService.php'));
    yield 1 => ($this->privates['security.context_listener.0'] ?? $this->load('getSecurity_ContextListener_0Service.php'));
    yield 2 => ($this->privates['security.authentication.listener.guard.admin'] ?? $this->load('getSecurity_Authentication_Listener_Guard_AdminService.php'));
    yield 3 => ($this->privates['security.authentication.listener.two_factor.admin'] ?? $this->load('getSecurity_Authentication_Listener_TwoFactor_AdminService.php'));
    yield 4 => ($this->privates['security.authentication.listener.anonymous.admin'] ?? $this->load('getSecurity_Authentication_Listener_Anonymous_AdminService.php'));
    yield 5 => ($this->privates['security.authentication.switchuser_listener.admin'] ?? $this->load('getSecurity_Authentication_SwitchuserListener_AdminService.php'));
    yield 6 => ($this->privates['security.access_listener'] ?? $this->load('getSecurity_AccessListenerService.php'));
}, 7), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, ($this->privates['scheb_two_factor.security.authentication.trust_resolver'] ?? $this->load('getSchebTwoFactor_Security_Authentication_TrustResolverService.php')), $b, 'admin', ($this->privates['App\Security\AdministratorAuthenticator'] ?? $this->load('getAdministratorAuthenticatorService.php')), NULL, NULL, ($this->privates['monolog.logger.security'] ?? $this->load('getMonolog_Logger_SecurityService.php')), false), $c, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('admin', 'security.user_checker', '.security.request_matcher.B3ldH_a', true, false, 'security.user.provider.concrete.app_administrator_provider', 'main_context', 'App\\Security\\AdministratorAuthenticator', NULL, NULL, array(0 => 'switch_user', 1 => 'guard', 2 => 'two_factor', 3 => 'anonymous'), array('parameter' => '_switch_user', 'role' => 'ROLE_ALLOWED_TO_SWITCH', 'stateless' => false)));
